name: Appium Run CI

on:
  push:
    branches: [ "lp/apredendendo-CI/CD" ]
  pull_request:
    branches: [ "lp/apredendendo-CI/CD" ]

jobs:
    appium_test:
        runs-on: ubuntu-latest

        steps:

        - name: Checkout
          uses: actions/checkout@v3

        - name: Configurar Node.js
          uses: actions/setup-node@v3
          with:
            node-version: '18.0.0'
            cache: 'npm'

        - name: Configurar Java
          uses: actions/setup-java@v3
          with:
            distribution: 'temurin'
            java-version: 18

        - name: Instalar dependências do projeto
          run: npm install

        - name: Configurar Android SDK e Variáveis de Ambiente
          run: |
            chmod +x ./scripts/android-sdk.sh && ./scripts/android-sdk.sh
            echo "export ANDROID_HOME=$RUNNER_WORKSPACE/android-sdk" >> $GITHUB_ENV
            echo "export ANDROID_SDK_ROOT=$RUNNER_WORKSPACE/android-sdk" >> $GITHUB_ENV
            echo "export PATH=$PATH:$RUNNER_WORKSPACE/android-sdk/tools/bin" >> $GITHUB_ENV

        - name: Iniciar Appium Server
          run: chmod +x ./scripts/appium-server.sh && ./scripts/appium-server.sh

        - name: Esperar Appium Server
          run: |
            until nc -z localhost 4723; do
            sleep 1
            done

        - name: Configuração do Emulador
          run: |
              echo 'y' | sdkmanager --install "system-images;android-33;google_apis;x86_64"
              echo 'no' | avdmanager --verbose create avd --force --name test --package "system-images;android-33;google_apis;x86_64" --abi google_apis/x86_64
              emulator -avd test -no-window -no-audio -no-boot-anim -no-jni -camera-back none -camera-front none -selinux permissive -qemu -m 4096 &

        - name: Esperar pelo Emulador
          run: adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done'

        - name: Executar Testes
          run: npm test:all
