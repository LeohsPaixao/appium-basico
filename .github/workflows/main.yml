name: Appium Run CI

on:
  push:
    branches: [ "lp/apredendendo-CI/CD" ]
  pull_request:
    branches: [ "lp/apredendendo-CI/CD" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.0.0]
        api-level: [33]
        target: [default]

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install Dependencies
      run: |
        npm install
        apt install adb
        adb kill-server || true  # Encerra o servidor ADB se estiver em execução
        adb start-server  # Inicia o servidor ADB

    - name: Restart ADB Server if Needed
      run: adb start-server

    - name: Clean Emulator State
      run: adb emu kill

    - name: Install and Run Appium Server
      run: |
        chmod +x ./scripts/appium-server.sh
        ./scripts/appium-server.sh &

    - name: Wait for Appium to Start
      run: sleep 10  # Aguarde alguns segundos para o Appium iniciar completamente

    - name: Start Emulator
      uses: reactivecircus/android-emulator-runner@v2.27.0
      with:
        api-level: ${{ matrix.api-level }}
        target: ${{ matrix.target }}
        arch: x86_64
        ram-size: 4096M
        heap-size: 1024M
        emulator-options: -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim
        script:

    - name: Wait for Emulator to Fully Start
      run: adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done'

    - name: Clean Emulator State Again (Optional)
      run: adb emu kill

    - name: Run Appium Tests
      run: |
        chmod +x ./scripts/appium-tests.sh
        ./scripts/appium-tests.sh
