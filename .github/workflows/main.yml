name: Appium Run CI

on:
  push:
    branches: [ "lp/apredendendo-CI/CD" ]
  pull_request:
    branches: [ "lp/apredendendo-CI/CD" ]

jobs:
  appium_test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configurar Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.0.0'

    - name: Configurar Java
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '18'

    - name: Instalar dependências do projeto
      run: npm install

    - name: Configurar e Iniciar o Appium Server
      run: |
        npm install -g appium --unsafe-perm=true --allow-root
        appium -v
        appium --config .appiumrc.json &>/dev/null &

    - name: Esperar Appium Server
      run: |
        until nc -z localhost 4723; do
          sleep 1
        done

    - name: Configurar Android SDK
      uses: android-actions/setup-android@v3

    - name: Configuração do Emulador
      run: |
        export ANDROID_AVD_HOME=$RUNNER_WORKSPACE/.android/avd
        sdkmanager --update
        sdkmanager --install "platforms;android-31" "build-tools;31.0.0" "extras;google;m2repository" "extras;android;m2repository" "system-images;android-31;google_apis;x86_64"
        echo "no" | avdmanager --verbose create avd --force --name testAVD --package 'system-images;android-31;google_apis;x86_64' --tag google_apis --abi x86_64
        avdmanager list avd
        $ANDROID_HOME/emulator/emulator -avd testAVD -no-window -no-audio -no-boot-anim -no-jni -camera-back none -camera-front none -selinux permissive -qemu -m 4096 &

        until adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done'; do
          sleep 5
        done

        echo "Emulador configurado com sucesso!"

    - name: Executar Testes
      run: npm test:all

    - name: Limpar Recursos
      run: |
        pkill -f "appium --config .appiumrc.json"
        pkill -f "$ANDROID_HOME/emulator/emulator"
